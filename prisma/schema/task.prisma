model Task {
  id           String        @id @default(uuid()) @map("id")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  isArchived   Boolean       @default(false) @map("is_archived")
  title        String        @unique @db.VarChar(255)
  description  String?       @db.VarChar(1000)
  state        TaskState     @default(CREATED)
  priority     TaskPriority  @default(LOW)
  startDate    DateTime      @map("start_date")
  endDate      DateTime      @map("end_date")
  userId       String        @map("user_id")
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId    String        @map("project_id")
  project      Project       @relation(fields: [projectId], references: [id], onDelete: Cascade)
  assignees    User[]        @relation("TaskAssignees")
  tags         Tag[]
  taskHistory  TaskHistory[]
  taskComments TaskComment[]

  @@index([isArchived])
  @@index([state])
  @@index([priority])
  @@map("tasks")
}

enum TaskState {
  CREATED
  ACCEPTED
  IN_PROGRESS
  DONE
  CANCELLED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}
