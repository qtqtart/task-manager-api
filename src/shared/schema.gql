# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateProjectInput {
  description: String
  memberIds: [String!]!
  title: String!
}

input CreateTaskInput {
  assigneeIds: [String!]
  description: String
  endDate: DateTime!
  priority: TaskPriority!
  startDate: DateTime!
  state: TaskState!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createProject(file: Upload!, input: CreateProjectInput!): Boolean!
  createTask(input: CreateTaskInput!, projectId: String!): Boolean!
  removeTaskFile(taskFileId: String!): Boolean!
  signIn(input: SignInInput!): Boolean!
  signOut: Boolean!
  signUp(file: Upload, input: SignUpInput!): Boolean!
  updateProject(file: Upload!, input: UpdateProjectInput!, projectId: String!): Boolean!
  updateTask(input: UpdateTaskInput!, taskId: String!): Boolean!
  uploadTaskFile(file: Upload!, taskId: String!): Boolean!
}

input ProjectFiltersInput {
  isArchived: Boolean
  searchTerms: String
}

type ProjectModel {
  createdAt: DateTime!
  description: String
  id: ID!
  imageUrl: String
  isArchived: Boolean!
  members: [UserModel!]!
  title: String!
  updatedAt: DateTime!
  user: UserModel!
}

type Query {
  getAllProjects(filters: ProjectFiltersInput!): [ProjectModel!]!
  getAllTaskFiles(taskId: String!): [TaskFileModel!]!
  getAllTasks(filters: TaskFiltersInput!, projectId: String!): [TaskModel!]!
  getAllUsers: [UserModel!]!
  getCurrentUser: UserModel!
  getProjectById(projectId: String!): ProjectModel!
  getTaskById(taskId: String!): TaskModel!
}

input SignInInput {
  login: String!
  password: String!
}

input SignUpInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  passwordConfirm: String!
  username: String!
}

type TaskFileModel {
  fileName: String!
  fileType: String!
  id: ID!
  size: Float!
  taskId: ID!
  url: String!
  user: UserModel!
}

input TaskFiltersInput {
  endDate: DateTime
  priority: TaskPriority
  searchTerms: String
  startDate: DateTime
  state: TaskState
  userId: ID
}

type TaskModel {
  assignees: [UserModel!]!
  createdAt: DateTime!
  description: String
  endDate: DateTime!
  id: ID!
  isArchived: Boolean!
  priority: TaskPriority!
  projectId: ID!
  startDate: DateTime!
  state: TaskState!
  title: String!
  updatedAt: DateTime!
  user: UserModel!
}

enum TaskPriority {
  HIGH
  LOW
  MEDIUM
}

enum TaskState {
  ACCEPTED
  CANCELLED
  CREATED
  DONE
  IN_PROGRESS
}

input UpdateProjectInput {
  description: String
  isArchived: [Boolean!]
  memberIds: [String!]
  title: String
}

input UpdateTaskInput {
  assigneeIds: [String!]
  description: String
  endDate: DateTime
  isArchived: [Boolean!]
  priority: TaskPriority
  startDate: DateTime
  state: TaskState
  title: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserModel {
  createdAt: DateTime!
  email: String!
  firstName: String
  id: ID!
  imageUrl: String
  lastName: String
  updatedAt: DateTime!
  username: String!
}